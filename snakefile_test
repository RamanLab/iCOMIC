################## Running Test Data ###########################
#
#shell.prefix("set +o pipefail; ")
#import re
#import pandas as pd
#import yaml
#from snakemake.utils import validate, min_version
#from snakemake.io import expand
#from snakemake.utils import R
#from snakemake.io import glob_wildcards
#from os.path import join
#shell.executable("/bin/bash")
#shell.prefix("source ~/.bashrc; ")
#
###### set minimum snakemake version #####
#
#min_version("5.1.2")
#
####### load config and sample sheets #####
#
#with open("config_test.yaml", 'r') as ymlfile:
#   config = yaml.safe_load(ymlfile)
#   
#configfile: "config_test.yaml"
##validate(config, schema="schemas/config.schema.yaml")
#print(config)
#
#test_data_dir = os.getcwd() 
#
#print(test_data_dir)
#
#print("you are executing script in" + test_data_dir)
#
##print (glob_wildcards(test_data_dir+ "{sample}_{condition}_Rep{rep}_R{len}.fastq"))
#
#(samples, type, reps, lens)=glob_wildcards(test_data_dir+"/{sample}_{condition}_Rep{rep}_R{len}.fastq")
#
#samples=sorted(list(set(samples)))
##print(samples)
#regex = re.compile(r'cutadapt')
#samples = [i for i in samples if not regex.search(i)]
#print(samples)
#type=sorted(list(set(type)))
##print(type)
#reps=sorted(list(set(reps)))
#print(reps)
#regex = re.compile(r'cutadapt')
#reps = [i for i in reps if not regex.search(i)]
##print(reps)
#lens=sorted(list(set(lens)))
#print(lens)
#
#print(expand('{sample}_{condition}_Rep{rep}_R{len}.fastq', sample=samples, condition=type, rep=reps, len=lens))

include: "rules/common_rna.smk"

rule all:
    input:
        expand('results_test/fastqc/{sample}_{condition}_Rep{rep}_R1_fastqc.zip', sample=samples, condition=type, rep=reps),
        expand('results_test/fastqc/{sample}_{condition}_Rep{rep}_R2_fastqc.zip', sample=samples, condition=type, rep=reps),
        expand('results_test/cutadapt/{sample}_{condition}_Rep{rep}_cutadapt_R1.fastq', sample=samples, condition=type, rep=reps),
        expand('results_test/cutadapt/{sample}_{condition}_Rep{rep}_cutadapt_R2.fastq', sample=samples, condition=type, rep=reps),
        expand('results_test/summary_stats/{sample}_{condition}_Rep{rep}_cutadapt_summary.txt', sample=samples, condition=type, rep=reps),
	expand('results_test/fastqc_after/{sample}_{condition}_Rep{rep}_cutadapt_R1_fastqc.zip', sample=samples, condition=type, rep=reps),
        expand('results_test/fastqc_after/{sample}_{condition}_Rep{rep}_cutadapt_R2_fastqc.zip', sample=samples, condition=type, rep=reps),
        expand('results_test/hisat2/{sample}_{condition}_Rep{rep}_cutadapt.sam', sample=samples, condition=type, rep=reps),
        expand('results_test/hisat2/{sample}_{condition}_Rep{rep}_cutadapt.bam', sample=samples, condition=type, rep=reps),
        #expand('results/called/{sample}_{condition}_Rep{rep}_cutadapt.bam', sample=samples, condition=type, rep=reps),
	expand('results_test/star/{sample}_{condition}_Rep{rep}/Aligned.out.bam', sample=samples, condition=type, rep=reps),
        expand('results_test/star/{sample}_{condition}_Rep{rep}/ReadsPerGene.out.tab', sample=samples, condition=type, rep=reps),
        #expand('results/called/{sample}_{condition}_Rep{rep}_cutadapt.bam', sample=samples, condition=type, rep=reps),
	#expand('results/called/{sample}_{condition}_Rep{rep}_ReadsPerGene.out.tab', sample=samples, condition=type, rep=reps),
	expand('results_test/salmon/{sample}_{condition}_Rep{rep}_cutadapt_salmon_quant', sample=samples, condition=type, rep=reps),
        expand('results_test/salmon_deseq2_results/salmon_results.Rdata'),
        expand('results_test/stringtie/{sample}_{condition}_Rep{rep}/{sample}_{condition}_Rep{rep}_transcript.gtf', sample=samples, condition=type, rep=reps),
        #expand('results/stringtie/{sample}_{condition}_Rep{rep}/{sample}_{condition}_Rep{rep}_gene_abundances.tsv', sample=samples, condition=type, rep=reps),
        #expand('results/stringtie/{sample}_{condition}_Rep{rep}/{sample}_{condition}_Rep{rep}_cov_ref.gtf', sample=samples, condition=type, rep=reps),
        expand('results_test/stringtie/merge/{sample}_mergelist.txt', sample=samples),
	expand('results_test/stringtie/{sample}_{condition}_Rep{rep}/{sample}_{condition}_Rep{rep}_merge_transcripts.gtf', sample=samples, condition=type, rep=reps),
        expand('results_test/stringtie_counts/{sample}_{condition}_Rep{rep}/{sample}_{condition}_Rep{rep}_transcripts.gtf', sample=samples, condition=type, rep=reps),
	expand('results_test/ballgown/SigDE.txt')
	#expand('results/bowtie2/{sample}_{condition}_Rep{rep}_cutadapt.sam', sample=samples, condition=type, rep=reps)

include: "rules/qc_rna.smk"
include: "rules/cutadapt_rna.smk"
include: "rules/fastqc_after_rna.smk"
include: "rules/HISAT2.smk"
include: "rules/star.smk"
include: "rules/salmon.smk"
include: "rules/stringtie.smk"
include: "rules/deseq2.smk"
#include: "rules/diffexp_test"
include: "rules/ballgown.smk"
#include: "rules/bowtie2_test.smk"

